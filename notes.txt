Schedule
    Commence    : 09:30 Hrs
    Tea Break   : 11:00 Hrs (20 mins)
    Lunch Break : 13:00 Hrs (60 mins)
    Tea Break   : 15:30 Hrs (20 mins)
    Windup      : 17:30 Hrs

Name
Experience
Primary Skillset
Experience in Golang (if any)
Any book you read / any shows you watched (recently)



The Midnight Library
britbox.com
David Walliams
Drive to Survive (F1 Racing)
Silent Patient
Pushkin Vertigo


Why Golang?
    Unique Features
    Take advantage of hardware improvements
    Concurrency
    Integrations with 'C'

Paradox of Choice
    Barry Shwartz

Simplicity
    25 keywords
        package, import, func, var, if, for, switch, go, chan, select, range, type, struct, interface, etc
    No classes (only structs & functions)
    No Inheritance (only composition)
    No Exceptions (only errors)
    No try catch finally construct
    No access modifiers (public, private etc)

Built for Concurrency
    Concurrency is built in the language
        4MB for an OS thread
        4KB of memory for goroutines
    Language features for Concurrency
        go, chan, select, range, close()

Close to hardware
    No *VM
    Not interpreted  (but compiled)

Cloud Native Applications


Code Organization
    Modules & Packages

Data Types in Golang
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real float32, imaginary float32)
    complex128 (real float64, imaginary float64)

    byte (alias for uint8)
    rune (alias for int32, represents 1 unicode character)

functions
    - can return more than one value
    - variadic functions are supported (varying number of arguments)
    - higher order functions are supported
        assign functions to variables
        functions can be passed as arguments to other functions
        functions can be returned as return values


Day-01 assignment

Create a calculator cli
When the program is executed, display the menu
1. Add
2. Subtract
3. Multiply
4. Divide
5. Exit

Everytime option 1- 4 are selected, accept the input, process & print the result and display the menu again until the user chooses '5'


Day-2
Environment Variables for the go tools
    to list all the variables
        go env

$GOROOT

$GOPATH
    bin
    pkg
        code for all the third party packages are imported
    src
        github.com
            tkmagesh
                <repo-name> => application

Go Modules (from go 1.13)
    go.mod (module)
        meta data information about the application
            module name
            go runtime version
            list of other third party modules that the application depends on

    1. creating a module
        go mod init <module-name>

    2. to install a third party package
        go get <package repo address>

    3. to create a build
        go build
        go build -o <binary name>


Collections
    array
        fixed size
    slice
        varying size
        wrapper for an array
        use 'append' function to add more items in to the slice
    map
        key/value pair collection


memory allocation in go
    https://research.swtch.com/godata


Assignment-2


Aliquip magna irure eiusmod sit elit ipsum incididunt qui labore fugiat culpa ut commodo irure Excepteur duis Lorem dolor adipisicing dolor officia mollit voluptate Consectetur exercitation occaecat laboris voluptate amet aliqua esse ex anim enim Elit exercitation officia tempor consectetur consequat reprehenderit dolor labore ex veniam minim fugiat consequat Aliquip velit voluptate qui aute enim Magna labore sint nulla magna ipsum

3 letter words = 10
5 letter words = 7
4 letter words = 15

The max occurence of words by size of the word = 15 (word size = 4)
words := strings.Split(str, " ")


Assignment
implement sort functionality for products 
    IMPORTANT : use the sort.Sort() method

    Default sort : by id
    implement apis for sort by name, cost, units, category etc
    

Assignment
Write an add function to add 2 numbers

concurrently execute the add function to add 2 set of values (10,20) and (100,200)
aggregate them in the main function and print the final result (330)


IO
    Reader, Writer


gRPC

    Web
        IP
        TCP
        HTTP
        XML

        Web Services
            SOAP (Simple Object Access Protocol)
            WSDL (Web Services Description Language)

        REST (Representational State Transfer)
            Treat the data as a web resource

            Address (URL)
                http://myApp.com/products
                http://myApp.com/products/100

            HTTP Methods (Verbs)
                GET
                POST
                PUT
                PATCH
                DELETE
                HEAD
                OPTIONS

            HTTP Status codes
                200 OK
                201 Created
                202 Accepted
                302 Object Moved
                403 Forbidden
                404 Not Found
                500 Internal Server Error
                503 Service Unavailable

        HTTP/1.1
            Stateless Protocol
            Data in Text
            Realtime updates are not possible

Serailization
    Protocol Buffers

Modes of Communication
    request & response
    Client Streaming
    Server Streaming
    Client & Server Streaming (Bidirectional Streaming)

Tools:
go get -u github.com/golang/protobuf/protoc-gen-go
OR
brew install protobuf
brow install protoc-gen-go


go get -u google.golang.org/grpc



To generate the proxy and stub for the .proto file
    protoc ./proto/service.proto --go_out=plugins=grpc:.
    OR
    protoc --go_out=. --go_opt=paths=source_relative  proto/service.proto


OR
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
export PATH="$PATH:$(go env GOPATH)/bin"
protoc --go_out=. --go_opt=paths=source_relative \ --go-grpc_out=. --go-grpc_opt=paths=source_relative \ proto/service.proto